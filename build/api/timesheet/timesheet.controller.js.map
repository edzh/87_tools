{"version":3,"sources":["../../../src/server/api/timesheet/timesheet.controller.js"],"names":["getOne","req","res","Timesheet","findOne","_id","params","id","lean","populate","path","select","options","sort","datetime","model","day","exec","timesheet","status","end","json","data","console","error","getMany","find","query","timesheets","createOne","create","body","updateOne","findOneAndUpdate","new","upsert","safe","updatedTimesheet","removeOne","findOneAndRemove","removed","Timestamp","deleteMany","removedTimestamps","controller"],"mappings":"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","sourcesContent":["import { Timesheet } from './timesheet.model';\r\nimport { Timestamp } from '../timestamp/timestamp.model';\r\n\r\nexport const getOne = async (req, res) => {\r\n  try {\r\n    const timesheet = await Timesheet.findOne({ _id: req.params.id })\r\n      .lean()\r\n      .populate({\r\n        path: 'timestamp',\r\n        select: '-__v -timesheet',\r\n        options: {\r\n          sort: { datetime: -1 }\r\n        },\r\n        populate: {\r\n          path: 'student',\r\n          select: 'name pin clubs',\r\n          model: 'student',\r\n          populate: {\r\n            path: 'clubs',\r\n            select: 'name day -_id',\r\n            model: 'club',\r\n            options: {\r\n              sort: { day: 1 }\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .exec();\r\n\r\n    if (!timesheet) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: timesheet });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const getMany = async (req, res) => {\r\n  try {\r\n    const timesheets = await Timesheet.find(req.query)\r\n      .lean()\r\n      .exec();\r\n\r\n    res.status(200).json({ data: timesheets });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const createOne = async (req, res) => {\r\n  try {\r\n    const timesheet = await Timesheet.create({ ...req.body });\r\n    res.status(201).json({ data: timesheet });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const updateOne = async (req, res) => {\r\n  try {\r\n    const updatedTimesheet = await Timesheet.findOneAndUpdate(\r\n      { _id: req.params.id },\r\n      req.body,\r\n      { new: true, upsert: true, safe: true }\r\n    )\r\n      .lean()\r\n      .exec();\r\n\r\n    if (!updatedTimesheet) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: updatedTimesheet });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const removeOne = async (req, res) => {\r\n  try {\r\n    const removed = await Timesheet.findOneAndRemove({ _id: req.params.id });\r\n    const removedTimestamps = await Timestamp.deleteMany({\r\n      timesheet: removed._id\r\n    });\r\n\r\n    if (!removed) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    return res.status(200).json({ data: removed });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nconst controller = {\r\n  getOne,\r\n  getMany,\r\n  createOne,\r\n  updateOne,\r\n  removeOne\r\n};\r\n\r\nexport default controller;\r\n"],"file":"timesheet.controller.js"}