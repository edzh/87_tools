{"version":3,"sources":["../../../src/server/api/student/student.controller.js"],"names":["getOne","req","res","Student","findOne","_id","params","id","lean","populate","path","select","options","sort","day","exec","student","status","end","json","data","console","error","getMany","find","query","name","students","createOne","create","body","updateOne","Family","findOneAndUpdate","family","$pull","new","oldFamily","updatedStudent","$addToSet","newFamily","removeOne","findOneAndRemove","removed","controller"],"mappings":"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","sourcesContent":["import { Student } from './student.model';\r\nimport { Family } from '../family/family.model';\r\n\r\nexport const getOne = async (req, res) => {\r\n  try {\r\n    const student = await Student.findOne({ _id: req.params.id })\r\n      .lean()\r\n      .populate({\r\n        path: 'clubs',\r\n        select: '-__v',\r\n        options: {\r\n          sort: { day: 1 }\r\n        }\r\n      })\r\n      .populate('family', '-students -__v')\r\n      .exec();\r\n\r\n    if (!student) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: student });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const getMany = async (req, res) => {\r\n  try {\r\n    const students = await Student.find(req.query)\r\n      .lean()\r\n      .populate({\r\n        path: 'clubs',\r\n        select: '-__v -students',\r\n        options: { sort: { day: 1 } }\r\n      })\r\n      .sort({ name: 1 })\r\n      .exec();\r\n\r\n    res.status(200).json({ data: students });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const createOne = async (req, res) => {\r\n  try {\r\n    const student = await Student.create({ ...req.body });\r\n    res.status(201).json({ data: student });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const updateOne = async (req, res) => {\r\n  try {\r\n    const student = await Student.findOne({ _id: req.params.id });\r\n    const oldFamily = await Family.findOneAndUpdate(\r\n      { _id: student.family },\r\n      { $pull: { students: req.params.id } },\r\n      { new: true }\r\n    );\r\n\r\n    const updatedStudent = await Student.findOneAndUpdate(\r\n      { _id: req.params.id },\r\n      req.body,\r\n      { new: true }\r\n    )\r\n      .lean()\r\n      .exec();\r\n\r\n    const newFamily = await Family.findOneAndUpdate(\r\n      { _id: updatedStudent.family },\r\n      { $addToSet: { students: [req.params.id] } },\r\n      { new: true }\r\n    );\r\n\r\n    if (!updatedStudent) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: updatedStudent });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const removeOne = async (req, res) => {\r\n  try {\r\n    const removed = await Student.findOneAndRemove({ _id: req.params.id });\r\n\r\n    if (!removed) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    return res.status(200).json({ data: removed });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nconst controller = {\r\n  getOne,\r\n  getMany,\r\n  createOne,\r\n  updateOne,\r\n  removeOne\r\n};\r\n\r\nexport default controller;\r\n"],"file":"student.controller.js"}