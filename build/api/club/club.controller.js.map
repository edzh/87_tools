{"version":3,"sources":["../../../src/server/api/club/club.controller.js"],"names":["getOne","req","res","Club","findOne","_id","params","id","lean","populate","exec","club","status","end","json","data","console","error","getMany","find","query","clubs","createOne","create","body","updateOne","findOneAndUpdate","students","new","upsert","safe","updatedClub","removeOne","findOneAndRemove","removed","controller"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEO,IAAMA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECC,WAAKC,OAAL,CAAa;AAAEC,cAAAA,GAAG,EAAEJ,GAAG,CAACK,MAAJ,CAAWC;AAAlB,aAAb,EAChBC,IADgB,GAEhBC,QAFgB,CAEP,UAFO,EAGhBC,IAHgB,EAFD;;AAAA;AAEZC,YAAAA,IAFY;;AAAA,gBAObA,IAPa;AAAA;AAAA;AAAA;;AAAA,6CAQTT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EARS;;AAAA;AAWlBX,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEJ;AAAR,aAArB;AAXkB;AAAA;;AAAA;AAAA;AAAA;AAalBK,YAAAA,OAAO,CAACC,KAAR;AACAf,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAdkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANb,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AAkBA,IAAMkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOjB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECC,WAAKgB,IAAL,CAAUlB,GAAG,CAACmB,KAAd,EACjBZ,IADiB,GAEjBC,QAFiB,CAER,UAFQ,EAGjBC,IAHiB,EAFD;;AAAA;AAEbW,YAAAA,KAFa;AAOnBnB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEM;AAAR,aAArB;AAPmB;AAAA;;AAAA;AAAA;AAAA;AASnBL,YAAAA,OAAO,CAACC,KAAR;AACAf,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPK,OAAO;AAAA;AAAA;AAAA,GAAb;;;;AAcA,IAAMI,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFC,WAAKoB,MAAL,mBAAiBtB,GAAG,CAACuB,IAArB,EAFE;;AAAA;AAEfb,YAAAA,IAFe;AAGrBT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEJ;AAAR,aAArB;AAHqB;AAAA;;AAAA;AAAA;AAAA;AAKrBK,YAAAA,OAAO,CAACC,KAAR;AACAf,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATS,SAAS;AAAA;AAAA;AAAA,GAAf;;;;AAUA,IAAMG,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOxB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKC,WAAKuB,gBAAL,CACxB;AAAErB,cAAAA,GAAG,EAAEJ,GAAG,CAACK,MAAJ,CAAWC;AAAlB,aADwB,EAExB;AACA;AAAEoB,cAAAA,QAAQ,EAAE1B,GAAG,CAACuB,IAAJ,CAASG;AAArB,aAHwB,EAIxB;AAAEC,cAAAA,GAAG,EAAE,IAAP;AAAaC,cAAAA,MAAM,EAAE,IAArB;AAA2BC,cAAAA,IAAI,EAAE;AAAjC,aAJwB,EAMvBtB,IANuB,GAOvBE,IAPuB,EAFL;;AAAA;AAEfqB,YAAAA,WAFe;;AAAA,gBAWhBA,WAXgB;AAAA;AAAA;AAAA;;AAAA,8CAYZ7B,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAZY;;AAAA;AAerBX,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEgB;AAAR,aAArB;AAfqB;AAAA;;AAAA;AAAA;AAAA;AAiBrBf,YAAAA,OAAO,CAACC,KAAR;AACAf,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAlBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATY,SAAS;AAAA;AAAA;AAAA,GAAf;;;;AAsBA,IAAMO,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAO/B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECC,WAAK8B,gBAAL,CAAsB;AAAE5B,cAAAA,GAAG,EAAEJ,GAAG,CAACK,MAAJ,CAAWC;AAAlB,aAAtB,CAFD;;AAAA;AAEf2B,YAAAA,OAFe;;AAAA,gBAIhBA,OAJgB;AAAA;AAAA;AAAA;;AAAA,8CAKZhC,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EALY;;AAAA;AAAA,8CAQdX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEmB;AAAR,aAArB,CARc;;AAAA;AAAA;AAAA;AAUrBlB,YAAAA,OAAO,CAACC,KAAR;AACAf,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATmB,SAAS;AAAA;AAAA;AAAA,GAAf;;;AAeP,IAAMG,UAAU,GAAG;AACjBnC,EAAAA,MAAM,EAANA,MADiB;AAEjBkB,EAAAA,OAAO,EAAPA,OAFiB;AAGjBI,EAAAA,SAAS,EAATA,SAHiB;AAIjBG,EAAAA,SAAS,EAATA,SAJiB;AAKjBO,EAAAA,SAAS,EAATA;AALiB,CAAnB;eAQeG,U","sourcesContent":["import { Club } from './club.model';\r\n\r\nexport const getOne = async (req, res) => {\r\n  try {\r\n    const club = await Club.findOne({ _id: req.params.id })\r\n      .lean()\r\n      .populate('students')\r\n      .exec();\r\n\r\n    if (!club) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: club });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const getMany = async (req, res) => {\r\n  try {\r\n    const clubs = await Club.find(req.query)\r\n      .lean()\r\n      .populate('students')\r\n      .exec();\r\n\r\n    res.status(200).json({ data: clubs });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const createOne = async (req, res) => {\r\n  try {\r\n    const club = await Club.create({ ...req.body });\r\n    res.status(201).json({ data: club });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const updateOne = async (req, res) => {\r\n  try {\r\n    const updatedClub = await Club.findOneAndUpdate(\r\n      { _id: req.params.id },\r\n      // req.body,\r\n      { students: req.body.students },\r\n      { new: true, upsert: true, safe: true }\r\n    )\r\n      .lean()\r\n      .exec();\r\n\r\n    if (!updatedClub) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: updatedClub });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const removeOne = async (req, res) => {\r\n  try {\r\n    const removed = await Club.findOneAndRemove({ _id: req.params.id });\r\n\r\n    if (!removed) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    return res.status(200).json({ data: removed });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nconst controller = {\r\n  getOne,\r\n  getMany,\r\n  createOne,\r\n  updateOne,\r\n  removeOne\r\n};\r\n\r\nexport default controller;\r\n"],"file":"club.controller.js"}