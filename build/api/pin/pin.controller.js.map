{"version":3,"sources":["../../../src/server/api/pin/pin.controller.js"],"names":["getOne","req","res","next","Student","findOne","pin","params","populate","lean","exec","studentPin","status","json","data","Family","$eq","familyPin","console","log","end","error","controller"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEOC,iBAAQC,OAAR,CAAgB;AAAEC,cAAAA,GAAG,EAAEL,GAAG,CAACM,MAAJ,CAAWD;AAAlB,aAAhB,EACtBE,QADsB,GAEtBC,IAFsB,GAGtBC,IAHsB,EAFP;;AAAA;AAEZC,YAAAA,UAFY;;AAAA,iBAOdA,UAPc;AAAA;AAAA;AAAA;;AAAA,6CAQTT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEH;AAAR,aAArB,CARS;;AAAA;AAAA;AAAA,mBAWMI,eAAOV,OAAP,CAAe;AACrC,6BAAe;AAAEW,gBAAAA,GAAG,EAAEf,GAAG,CAACM,MAAJ,CAAWD;AAAlB;AADsB,aAAf,EAGrBE,QAHqB,CAGZ,UAHY,EAIrBC,IAJqB,GAKrBC,IALqB,EAXN;;AAAA;AAWZO,YAAAA,SAXY;;AAAA,gBAkBbA,SAlBa;AAAA;AAAA;AAAA;;AAmBhBC,YAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAG,CAACM,MAAJ,CAAWD,GAAvB,EAA4B,iBAA5B;AAnBgB,6CAoBTJ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB,EApBS;;AAAA;AAuBlBlB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEG;AAAR,aAArB;AAvBkB;AAAA;;AAAA;AAAA;AAAA;AAyBlBC,YAAAA,OAAO,CAACG,KAAR;AACAnB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB;;AA1BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANpB,MAAM;AAAA;AAAA;AAAA,GAAZ;;;AA8BP,IAAMsB,UAAU,GAAG;AACjBtB,EAAAA,MAAM,EAANA;AADiB,CAAnB;eAIesB,U","sourcesContent":["import { Family } from '../family/family.model';\r\nimport { Student } from '../student/student.model';\r\n\r\nexport const getOne = async (req, res, next) => {\r\n  try {\r\n    const studentPin = await Student.findOne({ pin: req.params.pin })\r\n      .populate()\r\n      .lean()\r\n      .exec();\r\n\r\n    if (studentPin) {\r\n      return res.status(200).json({ data: studentPin });\r\n    }\r\n\r\n    const familyPin = await Family.findOne({\r\n      'pickups.pin': { $eq: req.params.pin }\r\n    })\r\n      .populate('students')\r\n      .lean()\r\n      .exec();\r\n\r\n    if (!familyPin) {\r\n      console.log(req.params.pin, 'does not exist!');\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: familyPin });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nconst controller = {\r\n  getOne\r\n};\r\n\r\nexport default controller;\r\n"],"file":"pin.controller.js"}