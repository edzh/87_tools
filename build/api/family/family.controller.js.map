{"version":3,"sources":["../../../src/server/api/family/family.controller.js"],"names":["getOne","req","res","Family","findOne","_id","params","id","lean","populate","exec","family","status","end","json","data","console","error","getMany","find","query","families","createOne","create","body","updateOne","findOneAndUpdate","new","updatedFamily","removeOne","findOneAndRemove","removed","controller"],"mappings":"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","sourcesContent":["import { Family } from './family.model';\r\n\r\nexport const getOne = async (req, res) => {\r\n  try {\r\n    const family = await Family.findOne({ _id: req.params.id })\r\n      .lean()\r\n      .populate('clubs', '-_id -__v')\r\n      .populate('students', '-clubs')\r\n      .exec();\r\n\r\n    if (!family) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: family });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const getMany = async (req, res) => {\r\n  try {\r\n    const families = await Family.find(req.query)\r\n      .lean()\r\n      .populate('clubs', '-_id -__v -families')\r\n      .exec();\r\n\r\n    res.status(200).json({ data: families });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const createOne = async (req, res) => {\r\n  try {\r\n    const family = await Family.create({ ...req.body });\r\n    res.status(201).json({ data: family });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const updateOne = async (req, res) => {\r\n  try {\r\n    const updatedFamily = await Family.findOneAndUpdate(\r\n      { _id: req.params.id },\r\n      req.body,\r\n      { new: true }\r\n    )\r\n      .lean()\r\n      .exec();\r\n\r\n    if (!updatedFamily) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: updatedFamily });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const removeOne = async (req, res) => {\r\n  try {\r\n    const removed = await Family.findOneAndRemove({ _id: req.params.id });\r\n\r\n    if (!removed) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    return res.status(200).json({ data: removed });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nconst controller = {\r\n  getOne,\r\n  getMany,\r\n  createOne,\r\n  updateOne,\r\n  removeOne\r\n};\r\n\r\nexport default controller;\r\n"],"file":"family.controller.js"}