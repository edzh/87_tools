{"version":3,"sources":["../../../src/server/api/timestamp/timestamp.controller.js"],"names":["getOne","req","res","Timestamp","findOne","_id","params","id","lean","exec","timestamp","status","end","json","data","console","error","getMany","find","query","timestamps","createOne","create","body","Timesheet","findOneAndUpdate","timesheet","$push","new","upsert","safe","updatedTimesheet","updateOne","updatedTimestamp","removeOne","findOneAndRemove","removed","$pull","controller"],"mappings":"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","sourcesContent":["import { Timestamp } from './timestamp.model';\r\nimport { Timesheet } from '../timesheet/timesheet.model';\r\n\r\nexport const getOne = async (req, res) => {\r\n  try {\r\n    const timestamp = await Timestamp.findOne({ _id: req.params.id })\r\n      .lean()\r\n      .exec();\r\n\r\n    if (!timestamp) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: timestamp });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const getMany = async (req, res) => {\r\n  try {\r\n    const timestamps = await Timestamp.find(req.query)\r\n      .lean()\r\n      .exec();\r\n\r\n    res.status(200).json({ data: timestamps });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const createOne = async (req, res) => {\r\n  try {\r\n    const timestamp = await Timestamp.create({ ...req.body });\r\n\r\n    const updatedTimesheet = await Timesheet.findOneAndUpdate(\r\n      { _id: req.body.timesheet },\r\n      { $push: { timestamp: [timestamp._id] } },\r\n      { new: true, upsert: true, safe: true }\r\n    );\r\n\r\n    if (!updatedTimesheet) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(201).json({ data: timestamp });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const updateOne = async (req, res) => {\r\n  try {\r\n    const updatedTimestamp = await Timestamp.findOneAndUpdate(\r\n      { _id: req.params.id },\r\n      req.body,\r\n      { new: true, upsert: true, safe: true }\r\n    )\r\n      .lean()\r\n      .exec();\r\n\r\n    if (!updatedTimestamp) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    res.status(200).json({ data: updatedTimestamp });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nexport const removeOne = async (req, res) => {\r\n  try {\r\n    const removed = await Timestamp.findOneAndRemove({ _id: req.params.id });\r\n\r\n    const updatedTimesheet = await Timesheet.findOneAndUpdate(\r\n      { _id: removed.timesheet },\r\n      { $pull: { timestamp: removed._id } },\r\n      { new: true }\r\n    );\r\n\r\n    if (!removed) {\r\n      return res.status(400).end();\r\n    }\r\n\r\n    return res.status(200).json({ data: removed });\r\n  } catch (e) {\r\n    console.error(e);\r\n    res.status(400).end();\r\n  }\r\n};\r\n\r\nconst controller = {\r\n  getOne,\r\n  getMany,\r\n  createOne,\r\n  updateOne,\r\n  removeOne\r\n};\r\n\r\nexport default controller;\r\n"],"file":"timestamp.controller.js"}